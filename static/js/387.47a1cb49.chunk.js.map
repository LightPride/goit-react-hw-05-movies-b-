{"version":3,"file":"static/js/387.47a1cb49.chunk.js","mappings":"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","sources":["api/index.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/';\n\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n  return response.json();\n};\n\nexport const getMovieById = async id => {\n  const response = await fetch(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n\nexport const getMovieCredits = async id => {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n\nexport const getMovieReviews = async id => {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n\nexport const getMoviesBySearch = async searchQuery => {\n  const response = await fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n","import styled from '@emotion/styled';\n\nexport const CreditsImage = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'api';\nimport { CreditsImage } from './Cast.styled';\n\nexport default function Cast() {\n  const [credits, setCredits] = useState({});\n  const params = useParams();\n  const movieId = params.movieId;\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const data = await getMovieCredits(movieId);\n        setCredits(data);\n      } catch (error) {}\n    };\n    fetchMovieCredits();\n\n    //\n  }, [movieId]);\n  return (\n    <>\n      {credits.cast && (\n        <ul>\n          {credits.cast.map(\n            ({\n              name,\n              id,\n              character,\n              profile_path = 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg',\n            }) => {\n              return (\n                <li key={id}>\n                  {profile_path ? (\n                    <CreditsImage\n                      src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                      alt={name}\n                    />\n                  ) : (\n                    <CreditsImage\n                      src={\n                        'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                      }\n                      alt={name}\n                    />\n                  )}\n                  <p>{name}</p>\n                  <p>{character}</p>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      )}\n      {credits.crew && (\n        <ul>\n          {credits.crew.map(\n            ({\n              name,\n              id,\n              job,\n              profile_path = 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg',\n            }) => {\n              return (\n                <li key={id}>\n                  {profile_path ? (\n                    <CreditsImage\n                      src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                      alt={name}\n                    />\n                  ) : (\n                    <CreditsImage\n                      src={\n                        'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                      }\n                      alt={name}\n                    />\n                  )}\n\n                  <p>{name}</p>\n                  <p>{job}</p>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      )}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","Error","json","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesBySearch","searchQuery","CreditsImage","styled","Cast","useState","credits","setCredits","movieId","useParams","useEffect","fetchMovieCredits","data","cast","map","name","character","profile_path","src","alt","crew","job","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}