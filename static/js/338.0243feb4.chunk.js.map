{"version":3,"file":"static/js/338.0243feb4.chunk.js","mappings":"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","sources":["api/index.js","components/Pages/MovieDetails/MovieDetails.styled.js","components/Pages/MovieDetails/MovieImage.jsx","components/Pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/';\n\nconst API_KEY = 'ec3ca0e4403710b7fc1497b1dbf32c54';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n  return response.json();\n};\n\nexport const getMovieById = async id => {\n  const response = await fetch(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n\nexport const getMovieCredits = async id => {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n\nexport const getMovieReviews = async id => {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n\nexport const getMoviesBySearch = async searchQuery => {\n  const response = await fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}`\n  );\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n\n  return response.json();\n};\n","import styled from '@emotion/styled';\n\nexport const MovieImageWrap = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MovieImageWrapper = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { MovieImageWrap } from './MovieDetails.styled';\n\nexport default function MovieImage({ movie }) {\n  return (\n    <>\n      {movie.poster_path ? (\n        <MovieImageWrap\n          src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n          alt={movie.title}\n        />\n      ) : (\n        <MovieImageWrap\n          src={\n            'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n          }\n          alt={movie.title}\n        />\n      )}\n    </>\n  );\n}\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState, Suspense } from 'react';\nimport { getMovieById } from 'api';\nimport MovieImage from './MovieImage';\nimport Loader from '../../Loader/Loader';\nimport { MovieImageWrapper } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const params = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const movieId = params.movieId;\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovieById = async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setIsLoading(false);\n        setMovie(data);\n      } catch (error) {}\n    };\n    fetchMovieById();\n\n    //\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <MovieImageWrapper>\n        {isLoading ? (\n          <Loader></Loader>\n        ) : (\n          <MovieImage movie={movie}></MovieImage>\n        )}\n      </MovieImageWrapper>\n      <h1>{movie.title}</h1>\n      <p>\n        Popularity:{' '}\n        {movie.popularity ? movie.popularity : 'No information found'}\n      </p>\n      <p>\n        Overview: {movie.overview ? movie.overview : 'No information found'}\n      </p>\n      {movie.genres && (\n        <ul>\n          {movie.genres.map(({ name, id }) => {\n            return <li key={id}>{name}</li>;\n          })}\n        </ul>\n      )}\n      <ul>\n        <li>\n          <Link to={'cast'}>Cast</Link>\n        </li>\n        <li>\n          <Link to={'reviews'}>Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader></Loader>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","Error","json","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesBySearch","searchQuery","MovieImageWrap","styled","MovieImageWrapper","MovieImage","movie","poster_path","src","alt","title","MovieDetails","useState","setMovie","isLoading","setIsLoading","params","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useEffect","fetchMovieById","data","to","current","Loader","popularity","overview","genres","map","name","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}